{"version":3,"sources":["App.js","index.js"],"names":["ProductTable","props","items","React","useState","key","direction","sortConfig","setSortConfig","useMemo","sortableItems","sort","a","b","requestSort","useSortableData","products","getClassNamesFor","name","undefined","style","marginBottom","type","onClick","className","map","item","age","id","App","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"wNAuCMA,EAAe,SAACC,GAAW,IAAD,EApCR,SAACC,GAA0B,IAAD,EACZC,IAAMC,SAAS,CACjDC,IAAK,OAAQC,UAAW,eAFsB,mBACzCC,EADyC,KAC7BC,EAD6B,KAiChD,MAAO,CAAEN,MA5BWC,IAAMM,SAAQ,WAChC,IAAIC,EAAa,YAAOR,GAYxB,OAXmB,OAAfK,GACFG,EAAcC,MAAK,SAACC,EAAGC,GACrB,OAAID,EAAEL,EAAWF,KAAOQ,EAAEN,EAAWF,KACH,cAAzBE,EAAWD,WAA6B,EAAI,EAEjDM,EAAEL,EAAWF,KAAOQ,EAAEN,EAAWF,KACH,cAAzBE,EAAWD,UAA4B,GAAK,EAE9C,KAGJI,IACN,CAACR,EAAOK,IAckBO,YAZT,SAACT,GACnB,IAAIC,EAAY,YAEdC,GACAA,EAAWF,MAAQA,GACM,cAAzBE,EAAWD,YAEXA,EAAY,cAEdE,EAAc,CAAEH,MAAKC,eAGmBC,cAICQ,CAAgBd,EAAMe,UAAzDd,EADsB,EACtBA,MAAOY,EADe,EACfA,YAAaP,EADE,EACFA,WACtBU,EAAmB,SAACC,GACxB,GAAKX,EAGL,OAAOA,EAAWF,MAAQa,EAAOX,EAAWD,eAAYa,GAE1D,OACE,kCACE,yBAASC,MAAO,CAACC,aAAc,QAA/B,SAAwC,wDACxC,gCACE,+BACE,6BACE,wBACEC,KAAK,SACLC,QAAS,kBAAMT,EAAY,SAC3BU,UAAWP,EAAiB,QAH9B,oBAQF,6BACE,wBACEK,KAAK,SACLC,QAAS,kBAAMT,EAAY,QAC3BU,UAAWP,EAAiB,OAH9B,6BAUN,gCACGf,EAAMuB,KAAI,SAACC,GAAD,OACT,+BACE,6BAAKA,EAAKR,OACV,6BAAKQ,EAAKC,QAFHD,EAAKE,aAUT,SAASC,IACtB,OACE,qBAAKL,UAAU,MAAf,SACE,cAAC,EAAD,CACER,SAAU,CACR,CAAEY,GAAI,EAAGV,KAAM,WAAYS,IAAK,IAChC,CAAEC,GAAI,EAAGV,KAAM,OAAQS,IAAK,IAC5B,CAAEC,GAAI,EAAGV,KAAM,UAAWS,IAAK,IAC/B,CAAEC,GAAI,EAAGV,KAAM,SAAUS,IAAK,IAC9B,CAAEC,GAAI,EAAGV,KAAM,UAAWS,IAAK,SCxFzC,IAAMG,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACN,EAAD,MAEFC,K","file":"static/js/main.dd71babc.chunk.js","sourcesContent":["import React from 'react';\nimport './styles.css';\n\nconst useSortableData = (items, config = null) => {\n  const [sortConfig, setSortConfig] = React.useState({\n    key: \"name\", direction: 'descending'\n  });\n\n  const sortedItems = React.useMemo(() => {\n    let sortableItems = [...items];\n    if (sortConfig !== null) {\n      sortableItems.sort((a, b) => {\n        if (a[sortConfig.key] < b[sortConfig.key]) {\n          return sortConfig.direction === 'ascending' ? -1 : 1;\n        }\n        if (a[sortConfig.key] > b[sortConfig.key]) {\n          return sortConfig.direction === 'ascending' ? 1 : -1;\n        }\n        return 0;\n      });\n    }\n    return sortableItems;\n  }, [items, sortConfig]);\n\n  const requestSort = (key) => {\n    let direction = 'ascending';\n    if (\n      sortConfig &&\n      sortConfig.key === key &&\n      sortConfig.direction === 'ascending'\n    ) {\n      direction = 'descending';\n    }\n    setSortConfig({ key, direction });\n  };\n\n  return { items: sortedItems, requestSort, sortConfig };\n};\n\nconst ProductTable = (props) => {\n  const { items, requestSort, sortConfig } = useSortableData(props.products);\n  const getClassNamesFor = (name) => {\n    if (!sortConfig) {\n      return;\n    }\n    return sortConfig.key === name ? sortConfig.direction : undefined;\n  };\n  return (\n    <table>\n      <caption style={{marginBottom: \"30px\"}}><b>Table Sorting Example</b></caption> \n      <thead>\n        <tr>\n          <th>\n            <button\n              type=\"button\"\n              onClick={() => requestSort('name')}\n              className={getClassNamesFor('name')}\n            >\n              Name\n            </button>\n          </th>\n          <th>\n            <button\n              type=\"button\"\n              onClick={() => requestSort('age')}\n              className={getClassNamesFor('age')}\n            >\n              In Stock\n            </button>\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        {items.map((item) => (\n          <tr key={item.id}>\n            <td>{item.name}</td>\n            <td>{item.age}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <ProductTable\n        products={[\n          { id: 1, name: 'Abhishek', age: 20 },\n          { id: 2, name: 'Manu', age: 30 },\n          { id: 3, name: 'Chethan', age: 40 },\n          { id: 4, name: 'Likith', age: 22 },\n          { id: 5, name: 'Sharath', age: 20 },\n        ]}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}